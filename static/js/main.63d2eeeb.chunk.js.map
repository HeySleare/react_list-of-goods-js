{"version":3,"sources":["App.jsx","index.jsx"],"names":["SORT_FIELD_ABC","SORT_FIELD_LGTH","goodsFromServer","App","useState","sortField","setSortField","visibleGoods","goods","currStage","copyGoods","sort","good1","good2","localeCompare","length","sortingGoods","isReversed","setReversed","isReseted","setIsReseted","className","onClick","type","reverse","map","good","index","ReactDOM","render","document","getElementById"],"mappings":"iOAIMA,EAAiB,eACjBC,EAAkB,SAEXC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAqBK,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EApBR,SAAsBC,EAAOH,EAAWI,GACtC,IAAMC,EAAS,YAAOF,GActB,OAZAE,EAAUC,MAAK,SAACC,EAAOC,GACrB,OAAQR,GACN,KAAKL,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAINL,EAKcM,CAAad,EAAiBG,GACnD,EAAkCD,oBAAS,GAA3C,mBAAOa,EAAP,KAAmBC,EAAnB,KACA,EAAkCd,oBAAS,GAA3C,mBAAOe,EAAP,KAAkBC,EAAlB,KAEA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,WACPhB,EAAaN,GACboB,GAAa,IAEfG,KAAK,SACLF,UAAS,yBAAoBhB,IAAcL,GAAkB,YAN/D,iCAWA,wBACEsB,QAAS,WACPhB,EAAaL,GACbmB,GAAa,IAEfG,KAAK,SACLF,UAAS,4BAAuBhB,IAAcJ,GAAmB,YANnE,4BAWA,wBACEqB,QAASL,EACL,WACAC,GAAY,GAGRE,EADW,KAAdf,IAID,WACAa,GAAY,GACZE,GAAa,IAGjBG,KAAK,SACLF,UAAS,6BAAwBJ,GAAc,YAfjD,sBAoBEE,GAEA,wBACEG,QAAS,WACPhB,EAAa,IACbY,GAAY,GACZE,GAAa,IAEfG,KAAK,SACLF,UAAU,4BAPZ,sBAgBJ,6BACIJ,EACEV,EAAaiB,UAAUC,KAAI,SAACC,EAAMC,GAAP,OAC3B,oBAAe,UAAQ,OAAvB,SAA+BD,GAAtBA,MAETnB,EAAakB,KAAI,SAACC,EAAMC,GAAP,OACjB,oBAAe,UAAQ,OAAvB,SAA+BD,GAAtBA,YC9GrBE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.63d2eeeb.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nconst SORT_FIELD_ABC = 'alphabetical';\nconst SORT_FIELD_LGTH = 'length';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction sortingGoods(goods, sortField, currStage) {\n  const copyGoods = [...goods];\n\n  copyGoods.sort((good1, good2) => {\n    switch (sortField) {\n      case SORT_FIELD_ABC:\n        return good1.localeCompare(good2);\n\n      case SORT_FIELD_LGTH:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  return copyGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const visibleGoods = sortingGoods(goodsFromServer, sortField);\n  const [isReversed, setReversed] = useState(false);\n  const [isReseted, setIsReseted] = useState(true);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => {\n            setSortField(SORT_FIELD_ABC);\n            setIsReseted(false);\n          }}\n          type=\"button\"\n          className={`button is-info ${sortField !== SORT_FIELD_ABC && 'is-light'}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => {\n            setSortField(SORT_FIELD_LGTH);\n            setIsReseted(false);\n          }}\n          type=\"button\"\n          className={`button is-success ${sortField !== SORT_FIELD_LGTH && 'is-light'}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={isReversed\n            ? () => {\n              setReversed(false);\n              // eslint-disable-next-line no-unused-expressions\n              (sortField === ''\n                ? setIsReseted(true)\n                : setIsReseted(false));\n            }\n            : () => {\n              setReversed(true);\n              setIsReseted(false);\n            }\n          }\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'}`}\n        >\n          Reverse\n        </button>\n\n        {!isReseted\n          && (\n          <button\n            onClick={() => {\n              setSortField('');\n              setReversed(false);\n              setIsReseted(true);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n          )\n        }\n\n      </div>\n\n      <ul>\n        { isReversed\n          ? visibleGoods.reverse().map((good, index) => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))\n          : visibleGoods.map((good, index) => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}